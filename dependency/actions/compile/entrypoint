#!/usr/bin/env bash

set -eu
set -o pipefail
shopt -s inherit_errexit

function main() {
  local version output_dir target httpd_dir

  while [ "${#}" != 0 ]; do
    case "${1}" in
      --version)
        version="${2}"
        shift 2
        ;;

      --outputDir)
        output_dir="${2}"
        shift 2
        ;;

      --target)
        target="${2}"
        shift 2
        ;;

      "")
        shift
        ;;

      *)
        echo "unknown argument \"${1}\""
        exit 1
    esac
  done

  if [[ -z "${version:-}" ]]; then
    echo "--version is required"
    exit 1
  fi

  if [[ -z "${output_dir:-}" ]]; then
    echo "--outputDir is required"
    exit 1
  fi

  if [[ -z "${target:-}" ]]; then
    echo "--target is required"
    exit 1
  fi

  archives_dir="$(mktemp -d)"

  install_dir="$(mktemp -d)"
  apr_dir="${install_dir}/apr"
  apr_iconv_dir="${install_dir}/apr-iconv"
  apr_util_dir="${install_dir}/apr-util"
  httpd_dir="${install_dir}/httpd"

  pushd "${archives_dir}"
    apr_version=$(latest_github_version "apache/apr")
    echo "Downloading APR dependency v${apr_version}"

    # We use github just to get the latest version number.
    # Github mirror does not host artificats.
    curl "https://apache.osuosl.org/apr/apr-${apr_version}.tar.gz" \
      --fail \
      --show-error \
      --silent \
      --output "apr-${apr_version}.tar.gz"

    tar --extract \
      --file "apr-${apr_version}.tar.gz"

    pushd "apr-${apr_version}"
      echo "Running APR's configure script"
      mkdir "${apr_dir}"
      ./configure --prefix="${apr_dir}"

      echo "Running make and make install for APR"
      make
      make install

      echo "Running libtool"
      "${apr_dir}/build-1/libtool" --finish "${apr_dir}/lib"
    popd

    apr_iconv_version=$(latest_github_version "apache/apr-iconv")
    echo "Downloading APR Iconf dependency v${apr_iconv_version}"

    curl "https://apache.osuosl.org/apr/apr-iconv-${apr_iconv_version}.tar.gz" \
      --fail \
      --show-error \
      --silent \
      --output "apr-iconv-${apr_iconv_version}.tar.gz"

    tar --extract \
      --file "apr-iconv-${apr_iconv_version}.tar.gz"

    pushd "apr-iconv-${apr_iconv_version}"
      echo "Running APR Iconv's configure script"
      mkdir "${apr_iconv_dir}"
      ./configure --prefix="${apr_iconv_dir}" --with-apr="${apr_dir}/bin/apr-1-config"

      echo "Running make and make install for APR"
      make
      make install
    popd

    apr_util_version=$(latest_github_version "apache/apr-util")
    echo "Downloading APR Util dependency v${apr_util_version}"

    curl "https://apache.osuosl.org/apr/apr-util-${apr_util_version}.tar.gz" \
      --fail \
      --show-error \
      --silent \
      --output "apr-util-${apr_util_version}.tar.gz"

    tar --extract \
      --file "apr-util-${apr_util_version}.tar.gz"

    pushd "apr-util-${apr_util_version}"
      echo "Running APR Util's configure script"
      mkdir "${apr_util_dir}"
      ./configure \
        --prefix="${apr_util_dir}" \
        --with-apr="${apr_dir}" \
        --with-iconv="${apr_iconv_dir}" \
        --with-crypto \
        --with-openssl \
        --with-mysql \
        --with-pgsql \
        --with-gdbm \
        --with-ldap

      echo "Running make and make install for APR Util"
      make
      make install
    popd

    echo "Downloading HTTPD dependency v${version}"

    curl "http://archive.apache.org/dist/httpd/httpd-${version}.tar.bz2" \
      --fail \
      --show-error \
      --silent \
      --output "httpd-${version}.tar"

    tar --extract \
      --file "httpd-${version}.tar"

    pushd "httpd-${version}"
      echo "Running HTTPD's ./configure script"
      mkdir "${httpd_dir}"
      ./configure \
        --prefix="${httpd_dir}" \
        --with-apr="${apr_dir}" \
        --with-apr-util="${apr_util_dir}" \
        --with-ssl=/usr/lib/x86_64-linux-gnu \
        --enable-mpms-shared='worker event' \
        --enable-mods-shared='reallyall' \
        --disable-isapi \
        --disable-dav \
        --disable-dialup

      echo "Running make and make install for APR Util"
      make
      make install
    popd
  popd

  pushd "${httpd_dir}"
    rm -rf cgi-bin/ error/ icons/ include/ man/ manual/ htdocs/
    rm -rf conf/extra/* conf/httpd.conf conf/httpd.conf.bak conf/magic conf/original
    mkdir -p lib
    cp "${apr_dir}/lib/libapr-1.so.0" ./lib
    cp "${apr_util_dir}/lib/libaprutil-1.so.0" ./lib
    mkdir -p "./lib/apr-util-1"
    cp "${apr_util_dir}/lib/apr-util-1/"*.so ./lib/apr-util-1/
    mkdir -p "./lib/iconv"
    cp "${apr_iconv_dir}/lib/libapriconv-1.so.0" ./lib
    cp "${apr_iconv_dir}/lib/iconv/"*.so ./lib/iconv/
    cp /usr/lib/x86_64-linux-gnu/libcjose.so* ./lib/
    cp /usr/lib/x86_64-linux-gnu/libhiredis.so* ./lib/
    cp /usr/lib/x86_64-linux-gnu/libjansson.so* ./lib/

    tar zcvf "${output_dir}/temp.tgz" .
  popd

  pushd "${output_dir}"

    SHA256=$(sha256sum temp.tgz)
    SHA256="${SHA256:0:64}"

    OUTPUT_TARBALL_NAME="httpd_${version}_linux_x64_${target}_${SHA256:0:8}.tgz"
    OUTPUT_SHAFILE_NAME="httpd_${version}_linux_x64_${target}_${SHA256:0:8}.tgz.checksum"

    echo "Building tarball ${OUTPUT_TARBALL_NAME}"

    mv temp.tgz "${OUTPUT_TARBALL_NAME}"

    echo "Creating checksum file for ${OUTPUT_TARBALL_NAME}"
    echo "sha256:${SHA256}" > "${OUTPUT_SHAFILE_NAME}"
  popd
}


function latest_github_version() {
  local repo
  repo="https://github.com/${1}"

  # avoid -rc tags
  git -c \
    'versionsort.suffix=-' \
    ls-remote --exit-code --refs --sort='version:refname' --tags "${repo}" '*.*.*' \
    | tail -1 | cut -d/ --fields=3
}

main "${@:-}"
